<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0, user-scalable=yes, shrink-to-fit=no, viewport-fit=cover">
  <title>Manage Recipes | Admin</title>
  <link rel="icon" type="image/png" href="/images/panlog.png">
  <link rel="stylesheet" href="/css/admin.css" />
</head>
<body>
  <div class="admin-container">
    <header class="navbar">
      <a href="/" class="logo-img"><img src="/images/panlog.png" alt="Simplicious logo"></a>
      <h1>Manage Recipes</h1>
      <nav>
        <ul>
          <li><a href="/AdminDashboard">Dashboard</a></li>
          <li><a href="/manage-recipes" class="active">Manage Recipes</a></li>
          <li><a href="/Users">Users</a></li>
          <li><a href="/booksmanaging">Books</a></li>
          <li><a href="/Settings">Settings</a></li>
          <span>Welcome, <span id="admin-username"></span></span>
          <li onclick="logout()"style="color: #000;">Logout</li>
          <script>
              function logout() {
              localStorage.removeItem('token');
              localStorage.removeItem('user');
              window.location.href = '/';
              }
          </script>
          <script>
              document.addEventListener('DOMContentLoaded', function() {
                  const user = JSON.parse(localStorage.getItem('user'));
                  if (user) {
                      document.getElementById('admin-username').textContent = user.username;
                  }
              });
          </script>        </ul>
      </nav>
    </header>

    <main class="main-content">
      <section class="table-section">
        <h2>Add New Recipe</h2>
        <form id="add-recipe-form" class="add-book-form">
          <input type="text" name="title" placeholder="Recipe Title" required>
          <input type="text" name="imagePath" placeholder="Image Path" required>
          <input type="text" name="altText" placeholder="Alt Text">
          <textarea name="description" placeholder="Description" rows="4"></textarea>
          <input type="text" name="type" placeholder="Category" required>  

          <input type="text" name="ingredients" placeholder="Ingredients (Separate by commas)" required>
          <input type="text" name="instructions" placeholder="Instructions (Separate by commas)" required>

          <button type="submit" class="save">Add Recipe</button>
          <div id="form-message" class="form-message"></div>
        </form>
        <h2>All Recipes</h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Recipe Name</th>
              <th>Category</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% recipes.forEach(recipe => { %>
              <tr>
                <td>#<%= recipe?._id.toString().slice(-6) %></td>
                <td><%= recipe?.title %></td>
                <td><%= recipe?.type %></td>
                <td>
                  <!-- Edit button as a link -->
                  <a href="/recipes/<%= recipe?._id %>/edit-recipe"><button class="edit">Edit</button></a>

                  <!-- Delete form -->
                      <button class="delete" onclick="deleteRecipe('<%= recipe?._id %>')">Delete</button>

                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </section>
    </main>
  </div>

   <%- include('../partials/footer') %>

   <script>
  document.getElementById('add-recipe-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const form = e.target;
    const submitBtn = form.querySelector('.save');
    const messageDiv = document.getElementById('form-message');
    
    // Disable button during submission
    submitBtn.disabled = true;
    submitBtn.textContent = 'Saving...';
    messageDiv.textContent = '';
    messageDiv.className = 'form-message';

    try {
      const formData = new FormData(form);
      
      // Convert ingredients/instructions to arrays if needed
      if (typeof formData.get('ingredients') === 'string') {
        formData.set('ingredients', formData.get('ingredients').split(',').map(i => i.trim()));
      }
      if (typeof formData.get('instructions') === 'string') {
        formData.set('instructions', formData.get('instructions').split(',').map(i => i.trim()));
      }

      const response = await fetch('/recipes', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(formData)),
      });

      const result = await response.json();

      if (!response.ok) throw new Error(result.message || 'Failed to save recipe');

      // Success handling
      messageDiv.textContent = 'Recipe saved successfully!';
      messageDiv.classList.add('success');
      form.reset();

      // Optional: Refresh the recipe list
      setTimeout(() => window.location.reload(), 1500); // Or use DOM manipulation

    } catch (error) {
      messageDiv.textContent = error.message;
      messageDiv.classList.add('error');
      console.error('Error:', error);
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Add Recipe';
    }
  });
</script>
<script>
  async function deleteRecipe(recipeId) {
    if (!confirm('Delete this recipe?')) return;
    
    try {
      const response = await fetch(`/recipes/${recipeId}/delete`, {
        method: 'POST'
      });
      
      const result = await response.json();
      
      if (!response.ok) throw new Error(result.message);
      
      // Refresh the page to show changes
      window.location.reload();
    } catch (error) {
      alert('Error deleting recipe: ' + error.message);
    }
  }
</script>

</body>
</html>
